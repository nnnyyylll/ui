{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\lynnlam\\\\Documents\\\\GitHub\\\\ui\\\\world\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport moment from \"moment\";\nimport { UseEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const readExcel = file => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = e => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => {\n        const file = e.target.files[0];\n        readExcel(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table container\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: moment(d.Time).format(\"H:mm:ss\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.Text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, d.Item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n  const [dataSource, setDataSource] = useState([]);\n  const [editingRow, setEditingRow] = useState(null);\n  const [form] = Form.useForm();\n  useEffect(() => {\n    const data = [];\n    for (let index = 0; index < 7; index++) {\n      data.push({\n        key: `${index}`,\n        name: `Name ${index}`,\n        address: `Address ${index}`\n      });\n    }\n    setDataSource(data);\n  }, []);\n  const columns = [{\n    title: \"Name\",\n    dataIndex: \"name\",\n    render: (text, record) => {\n      if (editingRow === record.key) {\n        return /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"name\",\n          rules: [{\n            required: true,\n            message: \"Please enter your name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 20\n        }, this);\n      }\n    }\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\",\n    render: (text, record) => {\n      if (editingRow === record.key) {\n        return /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"address\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 20\n        }, this);\n      }\n    }\n  }, {\n    title: \"Actions\",\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          onClick: () => {\n            setEditingRow(record.key);\n            form.setFieldsValue({\n              name: record.name,\n              address: record.address\n            });\n          },\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          htmlType: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  const onFinish = values => {\n    const updatedDataSource = [...dataSource];\n    updatedDataSource.splice(editingRow, 1, {\n      ...values,\n      key: editingRow\n    });\n    setDataSource(updatedDataSource);\n    setEditingRow(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        onFinish: onFinish,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: dataSource\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"k4JeiRfP+cv4r5FjVl4HxaMXu1U=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","XLSX","moment","UseEffect","App","items","setItems","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","files","map","d","Time","format","Text","Item","dataSource","setDataSource","editingRow","setEditingRow","form","Form","useForm","useEffect","index","push","key","name","address","columns","title","dataIndex","render","text","record","required","message","_","setFieldsValue","onFinish","values","updatedDataSource","splice"],"sources":["D:/Users/lynnlam/Documents/GitHub/ui/world/src/App.js"],"sourcesContent":["import React from \"react\";\nimport {useState} from 'react';\nimport * as XLSX from 'xlsx';\nimport moment from\"moment\";\nimport { UseEffect } from \"react\";\n\n\n\n\n\nfunction App() \n{    \n\n    const [items, setItems] = useState([]);\n  \n    const readExcel = (file) => {\n\n      const promise = new Promise((resolve, reject) => {\n\n        const fileReader = new FileReader();\n\n        fileReader.readAsArrayBuffer(file);\n  \n        fileReader.onload = (e) => {\n\n          const bufferArray = e.target.result;\n  \n          const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n  \n          const wsname = wb.SheetNames[0];\n  \n          const ws = wb.Sheets[wsname];\n  \n          const data = XLSX.utils.sheet_to_json(ws);\n  \n          resolve(data);\n        };\n  \n        fileReader.onerror = (error) => {\n          reject(error);\n        };\n      });\n  \n    };\n  \n    return (\n      <div>\n        <input\n          type=\"file\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            readExcel(file);\n          }}\n        />\n  \n      \n        <table class=\"table container\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Time</th>\n              <th scope=\"col\">Text</th>\n            </tr>\n          </thead>\n           <tbody>\n            {items.map((d) => (\n              <tr key={d.Item}>\n                <th>{moment(d.Time).format(\"H:mm:ss\")}</th>\n                <td>{d.Text}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n    const [dataSource, setDataSource] = useState([]);\n    const [editingRow, setEditingRow] = useState(null);\n    const [form] = Form.useForm();\n  \n    useEffect(() => {\n      const data = [];\n      for (let index = 0; index < 7; index++) {\n        data.push({\n          key: `${index}`,\n          name: `Name ${index}`,\n          address: `Address ${index}`,\n        });\n      }\n      setDataSource(data);\n    }, []);\n    const columns = [\n      {\n        title: \"Name\",\n        dataIndex: \"name\",\n        render: (text, record) => {\n          if (editingRow === record.key) {\n            return (\n              <Form.Item\n                name=\"name\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please enter your name\",\n                  },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n            );\n          } else {\n            return <p>{text}</p>;\n          }\n        },\n      },\n      {\n        title: \"Address\",\n        dataIndex: \"address\",\n        render: (text, record) => {\n          if (editingRow === record.key) {\n            return (\n              <Form.Item name=\"address\">\n                <Input />\n              </Form.Item>\n            );\n          } else {\n            return <p>{text}</p>;\n          }\n        },\n      },\n      {\n        title: \"Actions\",\n        render: (_, record) => {\n          return (\n            <>\n              <Button\n                type=\"link\"\n                onClick={() => {\n                  setEditingRow(record.key);\n                  form.setFieldsValue({\n                    name: record.name,\n                    address: record.address,\n                  });\n                }}\n              >\n                Edit\n              </Button>\n              <Button type=\"link\" htmlType=\"submit\">\n                Save\n              </Button>\n            </>\n          );\n        },\n      },\n    ];\n    const onFinish = (values) => {\n      const updatedDataSource = [...dataSource];\n      updatedDataSource.splice(editingRow, 1, { ...values, key: editingRow });\n      setDataSource(updatedDataSource);\n      setEditingRow(null);\n    };\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Form form={form} onFinish={onFinish}>\n            <Table columns={columns} dataSource={dataSource}></Table>\n          </Form>\n        </header>\n      </div>\n    );\n  }\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}