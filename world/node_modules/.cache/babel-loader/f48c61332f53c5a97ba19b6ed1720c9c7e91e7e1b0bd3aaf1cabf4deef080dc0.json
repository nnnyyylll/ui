{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\lynnlam\\\\Documents\\\\GitHub\\\\ui\\\\world\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport parse from \"papaparse\";\nimport { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport moment from \"moment\";\nimport { Button, Table, Upload, Icon } from 'antd';\nimport Column from \"antd/es/table/Column\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const readExcel = file => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = e => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n    promise.then(d => {\n      setItems(d);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => {\n        const file = e.target.files[0];\n        readExcel(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(Column, {\n        children: \"Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Column, {\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), items.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: moment(d.Time).format(\"H:mm:ss\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: d.Text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, d.Item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","parse","useState","XLSX","moment","Button","Table","Upload","Icon","Column","App","items","setItems","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","d","files","map","Time","format","Text","Item"],"sources":["D:/Users/lynnlam/Documents/GitHub/ui/world/src/App.js"],"sourcesContent":["import React from \"react\";\nimport parse from \"papaparse\";\nimport {useState} from 'react';\nimport * as XLSX from 'xlsx';\nimport moment from\"moment\";\nimport { Button, Table, Upload, Icon} from 'antd';\nimport Column from \"antd/es/table/Column\";\n\n\nfunction App() \n{    \n\n    const [items, setItems] = useState([]);\n  \n    const readExcel = (file) => {\n\n      const promise = new Promise((resolve, reject) => {\n\n        const fileReader = new FileReader();\n\n        fileReader.readAsArrayBuffer(file);\n  \n        fileReader.onload = (e) => {\n\n          const bufferArray = e.target.result;\n  \n          const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n  \n          const wsname = wb.SheetNames[0];\n  \n          const ws = wb.Sheets[wsname];\n  \n          const data = XLSX.utils.sheet_to_json(ws);\n  \n          resolve(data);\n        };\n  \n        fileReader.onerror = (error) => {\n          reject(error);\n        };\n      });\n  \n      promise.then((d) => {\n        setItems(d);\n      });\n      \n    };\n  \n    return (\n      <div>\n        <input\n          type=\"file\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            readExcel(file);\n          }}\n        />\n  \n          <Table>\n            <Column>\n              Time\n              </Column>\n              <Column>\n                Text\n              </Column>\n       \n      \n            {items.map((d) => (\n              <tr key={d.Item}>\n                <th>{moment(d.Time).format(\"H:mm:ss\")}</th>\n                <td>{d.Text}</td>\n              </tr>\n            ))}\n       \n        </Table>\n      </div>\n    );\n            }\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,WAAW;AAC7B,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAOC,MAAM,MAAK,QAAQ;AAC1B,SAASC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAO,MAAM;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAG1C,SAASC,GAAG,GACZ;EAAA;EAEI,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,SAAS,GAAIC,IAAI,IAAK;IAE1B,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MAE/C,MAAMC,UAAU,GAAG,IAAIC,UAAU,EAAE;MAEnCD,UAAU,CAACE,iBAAiB,CAACP,IAAI,CAAC;MAElCK,UAAU,CAACG,MAAM,GAAIC,CAAC,IAAK;QAEzB,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;QAEnC,MAAMC,EAAE,GAAGxB,IAAI,CAACyB,IAAI,CAACJ,WAAW,EAAE;UAAEK,IAAI,EAAE;QAAS,CAAC,CAAC;QAErD,MAAMC,MAAM,GAAGH,EAAE,CAACI,UAAU,CAAC,CAAC,CAAC;QAE/B,MAAMC,EAAE,GAAGL,EAAE,CAACM,MAAM,CAACH,MAAM,CAAC;QAE5B,MAAMI,IAAI,GAAG/B,IAAI,CAACgC,KAAK,CAACC,aAAa,CAACJ,EAAE,CAAC;QAEzCf,OAAO,CAACiB,IAAI,CAAC;MACf,CAAC;MAEDf,UAAU,CAACkB,OAAO,GAAIC,KAAK,IAAK;QAC9BpB,MAAM,CAACoB,KAAK,CAAC;MACf,CAAC;IACH,CAAC,CAAC;IAEFvB,OAAO,CAACwB,IAAI,CAAEC,CAAC,IAAK;MAClB5B,QAAQ,CAAC4B,CAAC,CAAC;IACb,CAAC,CAAC;EAEJ,CAAC;EAED,oBACE;IAAA,wBACE;MACE,IAAI,EAAC,MAAM;MACX,QAAQ,EAAGjB,CAAC,IAAK;QACf,MAAMT,IAAI,GAAGS,CAAC,CAACE,MAAM,CAACgB,KAAK,CAAC,CAAC,CAAC;QAC9B5B,SAAS,CAACC,IAAI,CAAC;MACjB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eAEA,QAAC,KAAK;MAAA,wBACJ,QAAC,MAAM;QAAA,UAAC;MAEN;QAAA;QAAA;QAAA;MAAA,QAAS,eACT,QAAC,MAAM;QAAA,UAAC;MAER;QAAA;QAAA;QAAA;MAAA,QAAS,EAGVH,KAAK,CAAC+B,GAAG,CAAEF,CAAC,iBACX;QAAA,wBACE;UAAA,UAAKpC,MAAM,CAACoC,CAAC,CAACG,IAAI,CAAC,CAACC,MAAM,CAAC,SAAS;QAAC;UAAA;UAAA;UAAA;QAAA,QAAM,eAC3C;UAAA,UAAKJ,CAAC,CAACK;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAFVL,CAAC,CAACM,IAAI;QAAA;QAAA;QAAA;MAAA,QAIhB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEE;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEA;AAAC,GApEJpC,GAAG;AAAA,KAAHA,GAAG;AAqEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}