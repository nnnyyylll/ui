{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\lynnlam\\\\Documents\\\\GitHub\\\\ui\\\\world\\\\src\\\\App.js\";\nimport React from \"react\";\nimport parse from \"papaparse\";\nimport { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  function App() {\n    _s();\n    const [items, setItems] = useState([]);\n    const readExcel = file => {\n      const promise = new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n        fileReader.onload = e => {\n          const bufferArray = e.target.result;\n          const wb = XLSX.read(bufferArray, {\n            type: \"buffer\"\n          });\n          const wsname = wb.SheetNames[0];\n          const ws = wb.Sheets[wsname];\n          const data = XLSX.utils.sheet_to_json(ws);\n          resolve(data);\n        };\n        fileReader.onerror = error => {\n          reject(error);\n        };\n      });\n      promise.then(d => {\n        setItems(d);\n      });\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          const file = e.target.files[0];\n          readExcel(file);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"table container\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: d.Item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: d.Description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, d.Item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n  _s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","parse","useState","XLSX","App","items","setItems","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","d","files","map","Item","Description"],"sources":["D:/Users/lynnlam/Documents/GitHub/ui/world/src/App.js"],"sourcesContent":["import React from \"react\";\nimport parse from \"papaparse\";\nimport {useState} from 'react';\nimport * as XLSX from 'xlsx';\n\n\n\n\nfunction App() \n{    \n  function App() {\n    const [items, setItems] = useState([]);\n  \n    const readExcel = (file) => {\n      const promise = new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(file);\n  \n        fileReader.onload = (e) => {\n          const bufferArray = e.target.result;\n  \n          const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n  \n          const wsname = wb.SheetNames[0];\n  \n          const ws = wb.Sheets[wsname];\n  \n          const data = XLSX.utils.sheet_to_json(ws);\n  \n          resolve(data);\n        };\n  \n        fileReader.onerror = (error) => {\n          reject(error);\n        };\n      });\n  \n      promise.then((d) => {\n        setItems(d);\n      });\n    };\n  \n    return (\n      <div>\n        <input\n          type=\"file\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            readExcel(file);\n          }}\n        />\n  \n        <table class=\"table container\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Item</th>\n              <th scope=\"col\">Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map((d) => (\n              <tr key={d.Item}>\n                <th>{d.Item}</th>\n                <td>{d.Description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n            }\n}\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,WAAW;AAC7B,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAO,KAAKC,IAAI,MAAM,MAAM;AAAC;AAK7B,SAASC,GAAG,GACZ;EAAA;EACE,SAASA,GAAG,GAAG;IAAA;IACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;IAEtC,MAAMK,SAAS,GAAIC,IAAI,IAAK;MAC1B,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QAC/C,MAAMC,UAAU,GAAG,IAAIC,UAAU,EAAE;QACnCD,UAAU,CAACE,iBAAiB,CAACP,IAAI,CAAC;QAElCK,UAAU,CAACG,MAAM,GAAIC,CAAC,IAAK;UACzB,MAAMC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;UAEnC,MAAMC,EAAE,GAAGlB,IAAI,CAACmB,IAAI,CAACJ,WAAW,EAAE;YAAEK,IAAI,EAAE;UAAS,CAAC,CAAC;UAErD,MAAMC,MAAM,GAAGH,EAAE,CAACI,UAAU,CAAC,CAAC,CAAC;UAE/B,MAAMC,EAAE,GAAGL,EAAE,CAACM,MAAM,CAACH,MAAM,CAAC;UAE5B,MAAMI,IAAI,GAAGzB,IAAI,CAAC0B,KAAK,CAACC,aAAa,CAACJ,EAAE,CAAC;UAEzCf,OAAO,CAACiB,IAAI,CAAC;QACf,CAAC;QAEDf,UAAU,CAACkB,OAAO,GAAIC,KAAK,IAAK;UAC9BpB,MAAM,CAACoB,KAAK,CAAC;QACf,CAAC;MACH,CAAC,CAAC;MAEFvB,OAAO,CAACwB,IAAI,CAAEC,CAAC,IAAK;QAClB5B,QAAQ,CAAC4B,CAAC,CAAC;MACb,CAAC,CAAC;IACJ,CAAC;IAED,oBACE;MAAA,wBACE;QACE,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGjB,CAAC,IAAK;UACf,MAAMT,IAAI,GAAGS,CAAC,CAACE,MAAM,CAACgB,KAAK,CAAC,CAAC,CAAC;UAC9B5B,SAAS,CAACC,IAAI,CAAC;QACjB;MAAE;QAAA;QAAA;QAAA;MAAA,QACF,eAEF;QAAO,KAAK,EAAC,iBAAiB;QAAA,wBAC5B;UAAA,uBACE;YAAA,wBACE;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAK,eACzB;cAAI,KAAK,EAAC,KAAK;cAAA,UAAC;YAAW;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QAC7B;UAAA;UAAA;UAAA;QAAA,QACC,eACR;UAAA,UACGH,KAAK,CAAC+B,GAAG,CAAEF,CAAC,iBACX;YAAA,wBACE;cAAA,UAAKA,CAAC,CAACG;YAAI;cAAA;cAAA;cAAA;YAAA,QAAM,eACjB;cAAA,UAAKH,CAAC,CAACI;YAAW;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA,GAFjBJ,CAAC,CAACG,IAAI;YAAA;YAAA;YAAA;UAAA,QAIhB;QAAC;UAAA;UAAA;UAAA;QAAA,QACI;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAEA;EAAC,GA5DFjC,GAAG;AA6Dd;AAAC,KA/DQA,GAAG;AAgEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}