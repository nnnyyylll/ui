{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\lynnlam\\\\Documents\\\\GitHub\\\\ui\\\\world\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport parse from \"papaparse\";\nimport { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport moment from \"moment\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const readExcel = file => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = e => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, {\n          type: \"buffer\"\n        });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = error => {\n        reject(error);\n      };\n    });\n    promise.then(d => {\n      setItems(d);\n    });\n    const onAddcolmun = () => {\n      const newColmun = {\n        Time: randomNumber,\n        Text: \"Text\" + randomeNumber\n      };\n      setDataSource(pre => {\n        return [...pre, newcolmun];\n      });\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => {\n        const file = e.target.files[0];\n        readExcel(file);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onAddcolmun,\n      Add: true,\n      a: true,\n      new: true,\n      col: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table container\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: moment(d.Time).format(\"H:mm:ss\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.Text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, d.Item, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","parse","useState","XLSX","moment","ReactDOM","App","items","setItems","readExcel","file","promise","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","e","bufferArray","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","onerror","error","then","d","onAddcolmun","newColmun","Time","randomNumber","Text","randomeNumber","setDataSource","pre","newcolmun","files","map","format","Item"],"sources":["D:/Users/lynnlam/Documents/GitHub/ui/world/src/App.js"],"sourcesContent":["import React from \"react\";\nimport parse from \"papaparse\";\nimport {useState} from 'react';\nimport * as XLSX from 'xlsx';\nimport moment from\"moment\";\nimport ReactDOM from 'react-dom';\n\n\nfunction App() \n{    \n\n    const [items, setItems] = useState([]);\n  \n    const readExcel = (file) => {\n\n      const promise = new Promise((resolve, reject) => {\n\n        const fileReader = new FileReader();\n\n        fileReader.readAsArrayBuffer(file);\n  \n        fileReader.onload = (e) => {\n\n          const bufferArray = e.target.result;\n  \n          const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n  \n          const wsname = wb.SheetNames[0];\n  \n          const ws = wb.Sheets[wsname];\n  \n          const data = XLSX.utils.sheet_to_json(ws);\n  \n          resolve(data);\n        };\n  \n        fileReader.onerror = (error) => {\n          reject(error);\n        };\n      });\n  \n      promise.then((d) => {\n        setItems(d);\n      });\n      \n      const onAddcolmun=()=>{\n        const newColmun ={\n          Time:randomNumber,\n          Text:\"Text\"+randomeNumber\n        }\n        setDataSource(pre=>{\n          return [...pre,newcolmun]\n        }\n          )\n      }\n    };\n  \n    return (\n      <div>\n        <input\n          type=\"file\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            readExcel(file);\n          }}\n        />\n  \n       <Button onClick={onAddcolmun}Add a new col></Button>\n        <table class=\"table container\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Time</th>\n              <th scope=\"col\">Text</th>\n            </tr>\n          </thead>\n           <tbody>\n            {items.map((d) => (\n              <tr key={d.Item}>\n                <th>{moment(d.Time).format(\"H:mm:ss\")}</th>\n                <td>{d.Text}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n            }\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}