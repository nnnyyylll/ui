{"version":3,"file":"mockSDKWithListeners.js","names":["sdkMethodQueryListener","jest","fn","sdkMethodQueryForSlugListener","sdkMethodDashboardListener","sdkMethodRunQueryListener","sdkMethodLookmlModelExploreListener","sdkMethodCreateQueryListener","sdkMethodColorCollectionListener","mockSDKWithListeners","mockSDK","color_collection","then","result","create_query","dashboard","lookml_model_explore","query","query_for_slug","run_query","query_id","result_format"],"sources":["../../../src/testUtils/mockSDKWithListeners.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { mockSDK } from '@looker/visualizations-adapters'\nimport type { Looker40SDK } from '@looker/sdk'\n\n// mock to track sdk activity\nexport const sdkMethodQueryListener = jest.fn()\nexport const sdkMethodQueryForSlugListener = jest.fn()\nexport const sdkMethodDashboardListener = jest.fn()\nexport const sdkMethodRunQueryListener = jest.fn()\nexport const sdkMethodLookmlModelExploreListener = jest.fn()\nexport const sdkMethodCreateQueryListener = jest.fn()\nexport const sdkMethodColorCollectionListener = jest.fn()\n\nexport const mockSDKWithListeners: Partial<Looker40SDK> = {\n  ...mockSDK,\n  color_collection: () =>\n    (mockSDK as Looker40SDK)\n      .color_collection('abcdefghijklmnop')\n      .then((result) => {\n        sdkMethodColorCollectionListener(result)\n        return result\n      }),\n  create_query: () =>\n    (mockSDK as Looker40SDK).create_query({}).then((result) => {\n      sdkMethodCreateQueryListener(result)\n      return result\n    }),\n  dashboard: () =>\n    (mockSDK as Looker40SDK).dashboard('1').then((result) => {\n      sdkMethodDashboardListener(result)\n      return result\n    }),\n  lookml_model_explore: () =>\n    (mockSDK as Looker40SDK)\n      .lookml_model_explore('thelook', 'orders')\n      .then((result) => {\n        sdkMethodLookmlModelExploreListener(result)\n        return result\n      }),\n  query: () =>\n    (mockSDK as Looker40SDK).query('1').then((result) => {\n      sdkMethodQueryListener(result)\n      return result\n    }),\n  query_for_slug: () =>\n    (mockSDK as Looker40SDK).query_for_slug('qz123').then((result) => {\n      sdkMethodQueryForSlugListener(result)\n      return result\n    }),\n  run_query: () =>\n    (mockSDK as Looker40SDK)\n      .run_query({\n        query_id: '1',\n        result_format: 'json_detail',\n      })\n      .then((result) => {\n        sdkMethodRunQueryListener(result)\n        return result\n      }),\n}\n"],"mappings":";;;;;;;;AAIA;AAAyD;AAAA;AAIlD,IAAMA,sBAAsB,GAAGC,IAAI,CAACC,EAAE,EAAE;AAAA;AACxC,IAAMC,6BAA6B,GAAGF,IAAI,CAACC,EAAE,EAAE;AAAA;AAC/C,IAAME,0BAA0B,GAAGH,IAAI,CAACC,EAAE,EAAE;AAAA;AAC5C,IAAMG,yBAAyB,GAAGJ,IAAI,CAACC,EAAE,EAAE;AAAA;AAC3C,IAAMI,mCAAmC,GAAGL,IAAI,CAACC,EAAE,EAAE;AAAA;AACrD,IAAMK,4BAA4B,GAAGN,IAAI,CAACC,EAAE,EAAE;AAAA;AAC9C,IAAMM,gCAAgC,GAAGP,IAAI,CAACC,EAAE,EAAE;AAAA;AAElD,IAAMO,oBAA0C,mCAClDC,+BAAO;EACVC,gBAAgB,EAAE;IAAA,OACfD,+BAAO,CACLC,gBAAgB,CAAC,kBAAkB,CAAC,CACpCC,IAAI,CAAC,UAACC,MAAM,EAAK;MAChBL,gCAAgC,CAACK,MAAM,CAAC;MACxC,OAAOA,MAAM;IACf,CAAC,CAAC;EAAA;EACNC,YAAY,EAAE;IAAA,OACXJ,+BAAO,CAAiBI,YAAY,CAAC,CAAC,CAAC,CAAC,CAACF,IAAI,CAAC,UAACC,MAAM,EAAK;MACzDN,4BAA4B,CAACM,MAAM,CAAC;MACpC,OAAOA,MAAM;IACf,CAAC,CAAC;EAAA;EACJE,SAAS,EAAE;IAAA,OACRL,+BAAO,CAAiBK,SAAS,CAAC,GAAG,CAAC,CAACH,IAAI,CAAC,UAACC,MAAM,EAAK;MACvDT,0BAA0B,CAACS,MAAM,CAAC;MAClC,OAAOA,MAAM;IACf,CAAC,CAAC;EAAA;EACJG,oBAAoB,EAAE;IAAA,OACnBN,+BAAO,CACLM,oBAAoB,CAAC,SAAS,EAAE,QAAQ,CAAC,CACzCJ,IAAI,CAAC,UAACC,MAAM,EAAK;MAChBP,mCAAmC,CAACO,MAAM,CAAC;MAC3C,OAAOA,MAAM;IACf,CAAC,CAAC;EAAA;EACNI,KAAK,EAAE;IAAA,OACJP,+BAAO,CAAiBO,KAAK,CAAC,GAAG,CAAC,CAACL,IAAI,CAAC,UAACC,MAAM,EAAK;MACnDb,sBAAsB,CAACa,MAAM,CAAC;MAC9B,OAAOA,MAAM;IACf,CAAC,CAAC;EAAA;EACJK,cAAc,EAAE;IAAA,OACbR,+BAAO,CAAiBQ,cAAc,CAAC,OAAO,CAAC,CAACN,IAAI,CAAC,UAACC,MAAM,EAAK;MAChEV,6BAA6B,CAACU,MAAM,CAAC;MACrC,OAAOA,MAAM;IACf,CAAC,CAAC;EAAA;EACJM,SAAS,EAAE;IAAA,OACRT,+BAAO,CACLS,SAAS,CAAC;MACTC,QAAQ,EAAE,GAAG;MACbC,aAAa,EAAE;IACjB,CAAC,CAAC,CACDT,IAAI,CAAC,UAACC,MAAM,EAAK;MAChBR,yBAAyB,CAACQ,MAAM,CAAC;MACjC,OAAOA,MAAM;IACf,CAAC,CAAC;EAAA;AAAA,EACP;AAAA"}