{"version":3,"file":"ContextWrapper.js","names":["ContextWrapper","children","initialState","provider","Map","mockSDKWithListeners"],"sources":["../../../src/testUtils/ContextWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport type { ReactNode } from 'react'\nimport { SWRConfig } from 'swr'\nimport { ComponentsProvider } from '@looker/components'\nimport type { Looker40SDK } from '@looker/sdk'\nimport { SDKContext } from '../SDKContext'\nimport type { DataStore } from '../hooks'\nimport { DataState } from '../hooks'\nimport { mockSDKWithListeners } from '.'\n\ntype ContextWrapperProps = {\n  initialState?: DataStore\n  children?: ReactNode\n}\n\nexport const ContextWrapper = ({\n  children,\n  initialState,\n}: ContextWrapperProps) => {\n  return (\n    <ComponentsProvider>\n      <SWRConfig value={{ provider: () => new Map() }}>\n        <SDKContext.Provider value={mockSDKWithListeners as Looker40SDK}>\n          <DataState.Provider initialState={initialState}>\n            {children}\n          </DataState.Provider>\n        </SDKContext.Provider>\n      </SWRConfig>\n    </ComponentsProvider>\n  )\n}\n"],"mappings":";;;;;;;AAIA;AAEA;AACA;AAEA;AAEA;AACA;;AAOO,IAAMA,cAAc,GAAG,SAAjBA,cAAc,OAGA;EAAA,IAFzBC,QAAQ,QAARA,QAAQ;IACRC,YAAY,QAAZA,YAAY;EAEZ,OACE,gCAAC,8BAAkB,QACjB,gCAAC,cAAS;IAAC,KAAK,EAAE;MAAEC,QAAQ,EAAE;QAAA,OAAM,IAAIC,GAAG,EAAE;MAAA;IAAC;EAAE,GAC9C,gCAAC,sBAAU,CAAC,QAAQ;IAAC,KAAK,EAAEC;EAAoC,GAC9D,gCAAC,gBAAS,CAAC,QAAQ;IAAC,YAAY,EAAEH;EAAa,GAC5CD,QAAQ,CACU,CACD,CACZ,CACO;AAEzB,CAAC;AAAA"}