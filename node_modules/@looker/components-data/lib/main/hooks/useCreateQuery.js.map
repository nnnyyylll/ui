{"version":3,"file":"useCreateQuery.js","names":["useCreateQuery","newQuery","sdk","useSDK","DataState","useContainer","setById","fetcher","create_query","undefined","useSWR","JSON","stringify","revalidateOnFocus","SWRData","data","isValidating","value","draftId","id","draftMetadata","useEffect","Number","metadata","isOK","isSuccessResponse","isPending","queryId","getErrorResponse"],"sources":["../../../src/hooks/useCreateQuery.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useEffect } from 'react'\nimport type { IWriteQuery, IQuery } from '@looker/sdk'\nimport type { ISDKSuccessResponse } from '@looker/sdk-rtl'\nimport useSWR from 'swr'\nimport { getErrorResponse, isSuccessResponse } from '../utils'\nimport { useSDK } from './useSDK'\nimport { DataState } from './useDataState'\n\n/**\n * useCreateQuery creates a new query derived from the `newQuery` configuration.\n * This inserts a new query into the database and returns the ID\n *\n * @param newQuery Query configuration (including any additional filters or parameters)\n * @returns Query ID and async request state\n */\n\nexport const useCreateQuery = (newQuery?: Partial<IWriteQuery>) => {\n  const sdk = useSDK()\n  const { setById } = DataState.useContainer()\n\n  const fetcher = async () => {\n    if (newQuery) {\n      return await sdk.create_query(newQuery)\n    }\n\n    return undefined\n  }\n\n  const { data: SWRData, isValidating } = useSWR(\n    JSON.stringify(newQuery),\n    fetcher,\n    { revalidateOnFocus: false }\n  )\n\n  const { id: draftId, ...draftMetadata } =\n    (SWRData as ISDKSuccessResponse<IQuery>)?.value || {}\n\n  useEffect(() => {\n    setById(Number(draftId), {\n      metadata: draftMetadata,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [draftId])\n\n  return {\n    isOK: isSuccessResponse(SWRData) || typeof newQuery === 'undefined',\n    isPending: isValidating,\n    queryId: draftId ? Number(draftId) : undefined,\n    ...getErrorResponse(SWRData),\n  }\n}\n"],"mappings":";;;;;;;;;;AAKA;AAGA;AACA;AACA;AACA;AAA0C;AAAA;AAAA;;AAUnC,IAAMA,cAAc,GAAG,SAAjBA,cAAc,CAAIC,QAA+B,EAAK;EACjE,IAAMC,GAAG,GAAG,IAAAC,cAAM,GAAE;EACpB,4BAAoBC,uBAAS,CAACC,YAAY,EAAE;IAApCC,OAAO,yBAAPA,OAAO;EAEf,IAAMC,OAAO;IAAA,sEAAG;MAAA;QAAA;UAAA;YAAA,KACVN,QAAQ;cAAA;cAAA;YAAA;YAAA;YAAA,OACGC,GAAG,CAACM,YAAY,CAACP,QAAQ,CAAC;UAAA;YAAA;UAAA;YAAA,iCAGlCQ,SAAS;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACjB;IAAA,gBANKF,OAAO;MAAA;IAAA;EAAA,GAMZ;EAED,cAAwC,IAAAG,eAAM,EAC5CC,IAAI,CAACC,SAAS,CAACX,QAAQ,CAAC,EACxBM,OAAO,EACP;MAAEM,iBAAiB,EAAE;IAAM,CAAC,CAC7B;IAJaC,OAAO,WAAbC,IAAI;IAAWC,YAAY,WAAZA,YAAY;EAMnC,YACE,CAACF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAkCG,KAAK,KAAI,CAAC,CAAC;IAD3CC,OAAO,SAAXC,EAAE;IAAcC,aAAa;EAGrC,IAAAC,gBAAS,EAAC,YAAM;IACdf,OAAO,CAACgB,MAAM,CAACJ,OAAO,CAAC,EAAE;MACvBK,QAAQ,EAAEH;IACZ,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb;IACEM,IAAI,EAAE,IAAAC,wBAAiB,EAACX,OAAO,CAAC,IAAI,OAAOb,QAAQ,KAAK,WAAW;IACnEyB,SAAS,EAAEV,YAAY;IACvBW,OAAO,EAAET,OAAO,GAAGI,MAAM,CAACJ,OAAO,CAAC,GAAGT;EAAS,GAC3C,IAAAmB,uBAAgB,EAACd,OAAO,CAAC;AAEhC,CAAC;AAAA"}