{"version":3,"file":"useCreateQuery.js","names":["useEffect","useSWR","getErrorResponse","isSuccessResponse","useSDK","DataState","useCreateQuery","newQuery","sdk","setById","useContainer","fetcher","create_query","undefined","data","SWRData","isValidating","JSON","stringify","revalidateOnFocus","value","id","draftId","draftMetadata","Number","metadata","isOK","isPending","queryId"],"sources":["../../../src/hooks/useCreateQuery.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useEffect } from 'react'\nimport type { IWriteQuery, IQuery } from '@looker/sdk'\nimport type { ISDKSuccessResponse } from '@looker/sdk-rtl'\nimport useSWR from 'swr'\nimport { getErrorResponse, isSuccessResponse } from '../utils'\nimport { useSDK } from './useSDK'\nimport { DataState } from './useDataState'\n\n/**\n * useCreateQuery creates a new query derived from the `newQuery` configuration.\n * This inserts a new query into the database and returns the ID\n *\n * @param newQuery Query configuration (including any additional filters or parameters)\n * @returns Query ID and async request state\n */\n\nexport const useCreateQuery = (newQuery?: Partial<IWriteQuery>) => {\n  const sdk = useSDK()\n  const { setById } = DataState.useContainer()\n\n  const fetcher = async () => {\n    if (newQuery) {\n      return await sdk.create_query(newQuery)\n    }\n\n    return undefined\n  }\n\n  const { data: SWRData, isValidating } = useSWR(\n    JSON.stringify(newQuery),\n    fetcher,\n    { revalidateOnFocus: false }\n  )\n\n  const { id: draftId, ...draftMetadata } =\n    (SWRData as ISDKSuccessResponse<IQuery>)?.value || {}\n\n  useEffect(() => {\n    setById(Number(draftId), {\n      metadata: draftMetadata,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [draftId])\n\n  return {\n    isOK: isSuccessResponse(SWRData) || typeof newQuery === 'undefined',\n    isPending: isValidating,\n    queryId: draftId ? Number(draftId) : undefined,\n    ...getErrorResponse(SWRData),\n  }\n}\n"],"mappings":";;;;;;AAKA,SAASA,SAAS,QAAQ,OAAO;AAGjC,OAAOC,MAAM,MAAM,KAAK;AACxB,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,UAAU;AAC9D,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,SAAS,QAAQ,gBAAgB;;AAU1C,OAAO,MAAMC,cAAc,GAAIC,QAA+B,IAAK;EACjE,MAAMC,GAAG,GAAGJ,MAAM,EAAE;EACpB,MAAM;IAAEK;EAAQ,CAAC,GAAGJ,SAAS,CAACK,YAAY,EAAE;EAE5C,MAAMC,OAAO,GAAG,YAAY;IAC1B,IAAIJ,QAAQ,EAAE;MACZ,OAAO,MAAMC,GAAG,CAACI,YAAY,CAACL,QAAQ,CAAC;IACzC;IAEA,OAAOM,SAAS;EAClB,CAAC;EAED,MAAM;IAAEC,IAAI,EAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGf,MAAM,CAC5CgB,IAAI,CAACC,SAAS,CAACX,QAAQ,CAAC,EACxBI,OAAO,EACP;IAAEQ,iBAAiB,EAAE;EAAM,CAAC,CAC7B;EAED,aACE,CAACJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAkCK,KAAK,KAAI,CAAC,CAAC;IADjD;MAAEC,EAAE,EAAEC;IAA0B,CAAC;IAAfC,aAAa;EAGrCvB,SAAS,CAAC,MAAM;IACdS,OAAO,CAACe,MAAM,CAACF,OAAO,CAAC,EAAE;MACvBG,QAAQ,EAAEF;IACZ,CAAC,CAAC;EAEJ,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEb;IACEI,IAAI,EAAEvB,iBAAiB,CAACY,OAAO,CAAC,IAAI,OAAOR,QAAQ,KAAK,WAAW;IACnEoB,SAAS,EAAEX,YAAY;IACvBY,OAAO,EAAEN,OAAO,GAAGE,MAAM,CAACF,OAAO,CAAC,GAAGT;EAAS,GAC3CX,gBAAgB,CAACa,OAAO,CAAC;AAEhC,CAAC"}