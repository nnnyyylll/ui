{"version":3,"file":"ContextWrapper.js","names":["React","SWRConfig","ComponentsProvider","SDKContext","DataState","mockSDKWithListeners","ContextWrapper","children","initialState","provider","Map"],"sources":["../../../src/testUtils/ContextWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport type { ReactNode } from 'react'\nimport { SWRConfig } from 'swr'\nimport { ComponentsProvider } from '@looker/components'\nimport type { Looker40SDK } from '@looker/sdk'\nimport { SDKContext } from '../SDKContext'\nimport type { DataStore } from '../hooks'\nimport { DataState } from '../hooks'\nimport { mockSDKWithListeners } from '.'\n\ntype ContextWrapperProps = {\n  initialState?: DataStore\n  children?: ReactNode\n}\n\nexport const ContextWrapper = ({\n  children,\n  initialState,\n}: ContextWrapperProps) => {\n  return (\n    <ComponentsProvider>\n      <SWRConfig value={{ provider: () => new Map() }}>\n        <SDKContext.Provider value={mockSDKWithListeners as Looker40SDK}>\n          <DataState.Provider initialState={initialState}>\n            {children}\n          </DataState.Provider>\n        </SDKContext.Provider>\n      </SWRConfig>\n    </ComponentsProvider>\n  )\n}\n"],"mappings":";AAIA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,KAAK;AAC/B,SAASC,kBAAkB,QAAQ,oBAAoB;AAEvD,SAASC,UAAU,QAAQ,eAAe;AAE1C,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,oBAAoB,QAAQ,GAAG;AAOxC,OAAO,MAAMC,cAAc,GAAG,CAAC;EAC7BC,QAAQ;EACRC;AACmB,CAAC,KAAK;EACzB,OACE,oBAAC,kBAAkB,QACjB,oBAAC,SAAS;IAAC,KAAK,EAAE;MAAEC,QAAQ,EAAE,MAAM,IAAIC,GAAG;IAAG;EAAE,GAC9C,oBAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAEL;EAAoC,GAC9D,oBAAC,SAAS,CAAC,QAAQ;IAAC,YAAY,EAAEG;EAAa,GAC5CD,QAAQ,CACU,CACD,CACZ,CACO;AAEzB,CAAC"}