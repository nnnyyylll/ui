{"version":3,"file":"mockSDKWithListeners.js","names":["mockSDK","sdkMethodQueryListener","jest","fn","sdkMethodQueryForSlugListener","sdkMethodDashboardListener","sdkMethodRunQueryListener","sdkMethodLookmlModelExploreListener","sdkMethodCreateQueryListener","sdkMethodColorCollectionListener","mockSDKWithListeners","color_collection","then","result","create_query","dashboard","lookml_model_explore","query","query_for_slug","run_query","query_id","result_format"],"sources":["../../../src/testUtils/mockSDKWithListeners.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { mockSDK } from '@looker/visualizations-adapters'\nimport type { Looker40SDK } from '@looker/sdk'\n\n// mock to track sdk activity\nexport const sdkMethodQueryListener = jest.fn()\nexport const sdkMethodQueryForSlugListener = jest.fn()\nexport const sdkMethodDashboardListener = jest.fn()\nexport const sdkMethodRunQueryListener = jest.fn()\nexport const sdkMethodLookmlModelExploreListener = jest.fn()\nexport const sdkMethodCreateQueryListener = jest.fn()\nexport const sdkMethodColorCollectionListener = jest.fn()\n\nexport const mockSDKWithListeners: Partial<Looker40SDK> = {\n  ...mockSDK,\n  color_collection: () =>\n    (mockSDK as Looker40SDK)\n      .color_collection('abcdefghijklmnop')\n      .then((result) => {\n        sdkMethodColorCollectionListener(result)\n        return result\n      }),\n  create_query: () =>\n    (mockSDK as Looker40SDK).create_query({}).then((result) => {\n      sdkMethodCreateQueryListener(result)\n      return result\n    }),\n  dashboard: () =>\n    (mockSDK as Looker40SDK).dashboard('1').then((result) => {\n      sdkMethodDashboardListener(result)\n      return result\n    }),\n  lookml_model_explore: () =>\n    (mockSDK as Looker40SDK)\n      .lookml_model_explore('thelook', 'orders')\n      .then((result) => {\n        sdkMethodLookmlModelExploreListener(result)\n        return result\n      }),\n  query: () =>\n    (mockSDK as Looker40SDK).query('1').then((result) => {\n      sdkMethodQueryListener(result)\n      return result\n    }),\n  query_for_slug: () =>\n    (mockSDK as Looker40SDK).query_for_slug('qz123').then((result) => {\n      sdkMethodQueryForSlugListener(result)\n      return result\n    }),\n  run_query: () =>\n    (mockSDK as Looker40SDK)\n      .run_query({\n        query_id: '1',\n        result_format: 'json_detail',\n      })\n      .then((result) => {\n        sdkMethodRunQueryListener(result)\n        return result\n      }),\n}\n"],"mappings":";;;AAIA,SAASA,OAAO,QAAQ,iCAAiC;AAIzD,OAAO,MAAMC,sBAAsB,GAAGC,IAAI,CAACC,EAAE,EAAE;AAC/C,OAAO,MAAMC,6BAA6B,GAAGF,IAAI,CAACC,EAAE,EAAE;AACtD,OAAO,MAAME,0BAA0B,GAAGH,IAAI,CAACC,EAAE,EAAE;AACnD,OAAO,MAAMG,yBAAyB,GAAGJ,IAAI,CAACC,EAAE,EAAE;AAClD,OAAO,MAAMI,mCAAmC,GAAGL,IAAI,CAACC,EAAE,EAAE;AAC5D,OAAO,MAAMK,4BAA4B,GAAGN,IAAI,CAACC,EAAE,EAAE;AACrD,OAAO,MAAMM,gCAAgC,GAAGP,IAAI,CAACC,EAAE,EAAE;AAEzD,OAAO,MAAMO,oBAA0C,mCAClDV,OAAO;EACVW,gBAAgB,EAAE,MACfX,OAAO,CACLW,gBAAgB,CAAC,kBAAkB,CAAC,CACpCC,IAAI,CAAEC,MAAM,IAAK;IAChBJ,gCAAgC,CAACI,MAAM,CAAC;IACxC,OAAOA,MAAM;EACf,CAAC,CAAC;EACNC,YAAY,EAAE,MACXd,OAAO,CAAiBc,YAAY,CAAC,CAAC,CAAC,CAAC,CAACF,IAAI,CAAEC,MAAM,IAAK;IACzDL,4BAA4B,CAACK,MAAM,CAAC;IACpC,OAAOA,MAAM;EACf,CAAC,CAAC;EACJE,SAAS,EAAE,MACRf,OAAO,CAAiBe,SAAS,CAAC,GAAG,CAAC,CAACH,IAAI,CAAEC,MAAM,IAAK;IACvDR,0BAA0B,CAACQ,MAAM,CAAC;IAClC,OAAOA,MAAM;EACf,CAAC,CAAC;EACJG,oBAAoB,EAAE,MACnBhB,OAAO,CACLgB,oBAAoB,CAAC,SAAS,EAAE,QAAQ,CAAC,CACzCJ,IAAI,CAAEC,MAAM,IAAK;IAChBN,mCAAmC,CAACM,MAAM,CAAC;IAC3C,OAAOA,MAAM;EACf,CAAC,CAAC;EACNI,KAAK,EAAE,MACJjB,OAAO,CAAiBiB,KAAK,CAAC,GAAG,CAAC,CAACL,IAAI,CAAEC,MAAM,IAAK;IACnDZ,sBAAsB,CAACY,MAAM,CAAC;IAC9B,OAAOA,MAAM;EACf,CAAC,CAAC;EACJK,cAAc,EAAE,MACblB,OAAO,CAAiBkB,cAAc,CAAC,OAAO,CAAC,CAACN,IAAI,CAAEC,MAAM,IAAK;IAChET,6BAA6B,CAACS,MAAM,CAAC;IACrC,OAAOA,MAAM;EACf,CAAC,CAAC;EACJM,SAAS,EAAE,MACRnB,OAAO,CACLmB,SAAS,CAAC;IACTC,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAE;EACjB,CAAC,CAAC,CACDT,IAAI,CAAEC,MAAM,IAAK;IAChBP,yBAAyB,CAACO,MAAM,CAAC;IACjC,OAAOA,MAAM;EACf,CAAC;AAAC,EACP"}